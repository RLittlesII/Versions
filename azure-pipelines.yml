# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [AzurePipelines (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration AzurePipelines --host AzurePipelines
#
# </auto-generated>
# ------------------------------------------------------------------------------

trigger:
  branches:
    include:
      - main

stages:
  - stage: macOS_latest
    displayName: 'macOS-latest'
    dependsOn: [  ]
    pool:
      vmImage: 'macOS-latest'
    jobs:
      - job: Clean
        displayName: 'Clean'
        dependsOn: [  ]
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 6.0.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: CmdLine@2
            inputs:
              script: './build.cmd Clean --skip'
      - job: Restore
        displayName: 'Restore'
        dependsOn: [ Clean, Clean ]
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 6.0.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore --skip'
      - job: Boots
        displayName: 'Boots'
        dependsOn: [ Clean, Restore ]
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 6.0.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: CmdLine@2
            inputs:
              script: './build.cmd Boots --skip'
      - job: ModifyInfoPlist
        displayName: 'ModifyInfoPlist'
        dependsOn: [ Restore ]
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 6.0.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: CmdLine@2
            inputs:
              script: './build.cmd ModifyInfoPlist --skip'
      - job: Build
        displayName: 'Build'
        dependsOn: [ Restore, Boots, ModifyInfoPlist ]
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 6.0.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: CmdLine@2
            inputs:
              script: './build.cmd Build --skip'
      - job: Test
        displayName: 'Test'
        dependsOn: [ Build ]
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 6.0.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: CmdLine@2
            inputs:
              script: './build.cmd Test --skip'
      - job: Pack
        displayName: 'Pack'
        dependsOn: [ Test, Build ]
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 6.0.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: CmdLine@2
            inputs:
              script: './build.cmd Pack --skip'
      - job: XamariniOS
        displayName: 'XamariniOS'
        dependsOn: [ Restore, Boots, ModifyInfoPlist, Build, Pack ]
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 6.0.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: CmdLine@2
            inputs:
              script: './build.cmd XamariniOS --skip'
      - job: Default
        displayName: 'Default'
        dependsOn: [ XamariniOS ]
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 6.0.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: CmdLine@2
            inputs:
              script: './build.cmd Default --skip'
