trigger:
  batch: true
  branches:
    include:
      - main
      - refs/tags/*

pr:
  autoCancel: true
  branches:
    include:
      - main

pool:
  vmImage: 'macOS-latest'

variables:
  buildConfiguration: 'Release'
  iosConfiguration: 'iPhone'
  iosProjectDirectory: '$(Build.SourcesDirectory)/SemanticVersion/SemanticVersion.iOS'
  outputDirectoryiOS: '$(build.binariesDirectory)/$(iosConfiguration)/$(buildConfiguration)'

steps:

  - task: DotNetCoreCLI@2
    displayName: 'Install GitVersion'
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'install --global GitVersion.Tool --version 5.3.5'

  - task: CmdLine@2
    displayName: 'Run GitVersion'
    inputs:
      script: 'dotnet-gitversion /output buildserver'

  - task: NuGetCommand@2
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'

  - task: UpdateiOSVersionInfoPlist@1
    displayName: 'Info.Plist Version Change'
    inputs:
      infoPlistPath: '$(iosProjectDirectory)/Info.plist'
      bundleShortVersionString: '$(GitVersion.NuGetVersionV2)'
      bundleVersion: '$(GitVersion.CommitsSinceVersionSource)'

  - task: InstallAppleCertificate@2
    displayName: 'Install Apple Certificate'
    inputs:
      certSecureFile: '$(p12FileName)'
      certPwd: '$(p12Password)'
      keychain: 'temp'

  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install Provisioning Profile'
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: '$(provisioning)'

  #  - task: MSBuild@1
  #    inputs:
  #      solution: '**/*.sln'
  #      msbuildArguments: '/p:Platform=iPhoneSimulator /p:Configuration=Release /p:OutDir=$(Build.ArtifactStagingDirectory)'
  #      restoreNugetPackages: false

  - task: XamariniOS@2
    inputs:
      solutionFile: '**/*.iOS.csproj'
      configuration: 'Release'
      packageApp: true
      runNugetRestore: false
      signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
      signingProvisioningProfileID: '$(APPLE_PROV_PROFILE_UUID)'

  - task: CopyFiles@2
    displayName: 'Copy IPA-Files to artifact staging directory'
    inputs:
      SourceFolder: '$(iosProjectDirectory)/bin/$(iosConfiguration)/$(buildConfiguration)/'
      Contents: '*.*.ipa'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      CleanTargetFolder: true
      OverWrite: true
      preserveTimestamp: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Binary: iOS IPA'
    inputs:
      ArtifactName: 'iOS'